schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.5", for: EXECUTION)
  @link(url: "https://specs.apollo.dev/connect/v0.1", for: EXECUTION)
  @join__directive(graphs: [CONNECTORS], name: "link", args: {url: "https://specs.apollo.dev/connect/v0.1", import: ["@source", "@connect"]})
  @join__directive(graphs: [CONNECTORS], name: "source", args: {name: "v1", http: {baseURL: "https://rt-airlock-services-listing.herokuapp.com"}})
{
  query: Query
  mutation: Mutation
}

directive @join__directive(graphs: [join__Graph!], name: String!, args: join__DirectiveArguments) repeatable on SCHEMA | OBJECT | INTERFACE | FIELD_DEFINITION

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean, overrideLabel: String, contextArguments: [join__ContextArgument!]) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

type Amenity
  @join__type(graph: CONNECTORS)
{
  id: ID!

  """The amenity category the amenity belongs to"""
  category: String!

  """The amenity's name"""
  name: String!
}

input CreateListingInput
  @join__type(graph: CONNECTORS)
{
  title: String!
  numOfBeds: Int!
  costPerNight: Float!
}

type CreateListingResponse
  @join__type(graph: CONNECTORS)
{
  listing: Listing
}

input join__ContextArgument {
  name: String!
  type: String!
  context: String!
  selection: join__FieldValue!
}

scalar join__DirectiveArguments

scalar join__FieldSet

scalar join__FieldValue

enum join__Graph {
  CONNECTORS @join__graph(name: "connectors", url: "blah")
}

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

"""A particular intergalactic location available for booking"""
type Listing
  @join__type(graph: CONNECTORS)
{
  id: ID!

  """The listing's title"""
  title: String!

  """The number of beds available"""
  numOfBeds: Int

  """The cost per night"""
  costPerNight: Float

  """Indicates whether listing is closed for bookings (on hiatus)"""
  closed: Boolean

  """The amenities available for this listing"""
  amenities: [Amenity!]! @join__directive(graphs: [CONNECTORS], name: "connect", args: {source: "v1", http: {GET: "/listings/{$this.id}/amenities"}, selection: "id\nname\ncategory"})
}

type Mutation
  @join__type(graph: CONNECTORS)
{
  createListing(input: CreateListingInput!): CreateListingResponse @join__directive(graphs: [CONNECTORS], name: "connect", args: {source: "v1", http: {POST: "/listings", body: "listing:\n  $args.input {\n    title\n    numOfBeds\n    costPerNight\n  }"}, selection: "listing: {\n  id\n  title\n  numOfBeds\n  costPerNight\n  closed: closedForBookings\n}"})
}

type Query
  @join__type(graph: CONNECTORS)
{
  """A curated array of listings to feature on the homepage"""
  featuredListings: [Listing!]! @join__directive(graphs: [CONNECTORS], name: "connect", args: {source: "v1", http: {GET: "/featured-listings"}, selection: "id\ntitle\nnumOfBeds\ncostPerNight\nclosed: closedForBookings"})

  """A specific listing"""
  listing(id: ID!): Listing @join__directive(graphs: [CONNECTORS], name: "connect", args: {source: "v1", http: {GET: "/listings/{$args.id}"}, selection: "id\ntitle\nnumOfBeds\ncostPerNight\nclosed: closedForBookings\namenities {\n  id\n  category\n  name\n}"})
}
